# Production Environment Configuration
# Copy this file to .env.production and fill in your actual values

# Flask Configuration
FLASK_ENV=production
SECRET_KEY=your-production-secret-key-here-generate-a-long-random-string
JWT_SECRET_KEY=your-jwt-secret-key-here-different-from-secret-key

# Database (Supabase PostgreSQL)
# Get this from your Supabase project settings -> Database -> Connection string
# Format: postgresql://postgres:[YOUR-PASSWORD]@[YOUR-PROJECT-REF].supabase.co:5432/postgres
DATABASE_URL=postgresql://postgres:your-password@your-project-ref.supabase.co:5432/postgres

# Database Connection Pool Settings (for Railway/Supabase)
# These ensure stable connections with cloud-managed Postgres
DB_POOL_SIZE=10                # Max connections per container (10 for Railway, adjust as needed)
DB_MAX_OVERFLOW=5              # Allow 5 extra connections during bursts
DB_POOL_RECYCLE=3600          # Recycle connections every hour (Supabase closes idle connections)
DB_CONNECT_TIMEOUT=10         # Connection timeout in seconds

# Redis Configuration (for Celery)
# Railway provides REDIS_URL automatically when you add Redis service
# For Redis with SSL/TLS (e.g., Upstash), use rediss:// protocol
REDIS_URL=redis://redis:6379/0
# Set to 'true' if your Redis requires SSL/TLS
REDIS_TLS=false

# Celery Worker Configuration
CELERY_CONCURRENCY=2          # Number of worker processes (adjust based on Railway plan)

# Google Gemini API
GEMINI_API_KEY=your-gemini-api-key
GEMINI_MODEL=gemini-2.5-flash
GEMINI_MAX_RETRIES=3
GEMINI_RETRY_DELAY=1

# Google OAuth 2.0
# Get these from Google Cloud Console
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
CLIENT_SECRETS_FILE=client_secret.json
TOKEN_FILE=token.json

# CORS Configuration
# IMPORTANT: Update this with your production domain(s)
# Separate multiple domains with commas
CORS_ORIGINS=https://frenchnoveltool.com,https://www.frenchnoveltool.com

# Security Settings
JWT_ACCESS_TOKEN_EXPIRES_HOURS=1
JWT_REFRESH_TOKEN_EXPIRES_DAYS=30

# Rate Limiting
# Enable rate limiting in production (requires Redis)
RATELIMIT_ENABLED=true
RATELIMIT_DEFAULT=100 per hour
# REDIS_URL is used automatically for rate limiting storage

# File Upload
MAX_FILE_SIZE=52428800

# Logging
LOG_LEVEL=INFO
LOG_FILE=/tmp/app.log
