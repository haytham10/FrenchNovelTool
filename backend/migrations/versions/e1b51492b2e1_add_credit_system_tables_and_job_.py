"""Add credit system tables and job tracking

Revision ID: e1b51492b2e1
Revises: 1da9a0c3a2ac
Create Date: 2025-10-03 11:20:50.747186

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e1b51492b2e1'
down_revision = '1da9a0c3a2ac'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Note: users, history, and user_settings tables already exist from previous migrations
    # Only create new tables: jobs and credit_ledger
    
    # Create jobs table (references users and history which already exist)
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('history_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('original_filename', sa.String(length=128), nullable=False),
    sa.Column('model', sa.String(length=50), nullable=False),
    sa.Column('estimated_tokens', sa.Integer(), nullable=True),
    sa.Column('actual_tokens', sa.Integer(), nullable=True),
    sa.Column('estimated_credits', sa.Integer(), nullable=False),
    sa.Column('actual_credits', sa.Integer(), nullable=True),
    sa.Column('pricing_version', sa.String(length=20), nullable=False),
    sa.Column('pricing_rate', sa.Float(), nullable=False),
    sa.Column('processing_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.String(length=512), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['history_id'], ['history.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_jobs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_jobs_history_id'), ['history_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_jobs_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_jobs_user_id'), ['user_id'], unique=False)

    # Add job_id column to history table now that jobs table exists
    with op.batch_alter_table('history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('job_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_history_job_id', 'jobs', ['job_id'], ['id'])
        batch_op.create_index(batch_op.f('ix_history_job_id'), ['job_id'], unique=False)

    # Create credit_ledger table
    op.create_table('credit_ledger',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('month', sa.String(length=7), nullable=False),
    sa.Column('delta_credits', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=50), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('pricing_version', sa.String(length=20), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('credit_ledger', schema=None) as batch_op:
        batch_op.create_index('idx_user_month', ['user_id', 'month'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_job_id'), ['job_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_month'), ['month'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_reason'), ['reason'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop credit_ledger table
    with op.batch_alter_table('credit_ledger', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credit_ledger_user_id'))
        batch_op.drop_index(batch_op.f('ix_credit_ledger_timestamp'))
        batch_op.drop_index(batch_op.f('ix_credit_ledger_reason'))
        batch_op.drop_index(batch_op.f('ix_credit_ledger_month'))
        batch_op.drop_index(batch_op.f('ix_credit_ledger_job_id'))
        batch_op.drop_index('idx_user_month')

    op.drop_table('credit_ledger')

    # Remove job_id column from history table
    with op.batch_alter_table('history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_history_job_id'))
        batch_op.drop_constraint('fk_history_job_id', type_='foreignkey')
        batch_op.drop_column('job_id')

    # Drop jobs table
    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_jobs_user_id'))
        batch_op.drop_index(batch_op.f('ix_jobs_status'))
        batch_op.drop_index(batch_op.f('ix_jobs_history_id'))
        batch_op.drop_index(batch_op.f('ix_jobs_created_at'))

    op.drop_table('jobs')
    # ### end Alembic commands ###
