"""Initial schema with all models

Revision ID: 0299e3b2e149
Revises: 
Create Date: 2025-10-09 19:04:21.618072

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0299e3b2e149'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('original_filename', sa.String(length=128), nullable=True),
    sa.Column('processed_sentences_count', sa.Integer(), nullable=True),
    sa.Column('spreadsheet_url', sa.String(length=256), nullable=True),
    sa.Column('error_message', sa.String(length=512), nullable=True),
    sa.Column('failed_step', sa.String(length=50), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('processing_settings', sa.JSON(), nullable=True),
    sa.Column('sentences', sa.JSON(), nullable=True),
    sa.Column('exported_to_sheets', sa.Boolean(), nullable=False),
    sa.Column('export_sheet_url', sa.String(length=256), nullable=True),
    sa.Column('chunk_ids', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_history_job_id'), ['job_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_history_original_filename'), ['original_filename'], unique=False)
        batch_op.create_index(batch_op.f('ix_history_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_history_user_id'), ['user_id'], unique=False)

    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('history_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('original_filename', sa.String(length=128), nullable=False),
    sa.Column('model', sa.String(length=50), nullable=False),
    sa.Column('estimated_tokens', sa.Integer(), nullable=True),
    sa.Column('actual_tokens', sa.Integer(), nullable=True),
    sa.Column('estimated_credits', sa.Integer(), nullable=False),
    sa.Column('actual_credits', sa.Integer(), nullable=True),
    sa.Column('pricing_version', sa.String(length=20), nullable=False),
    sa.Column('pricing_rate', sa.Float(), nullable=False),
    sa.Column('processing_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.String(length=512), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('celery_task_id', sa.String(length=155), nullable=True),
    sa.Column('progress_percent', sa.Integer(), nullable=True),
    sa.Column('current_step', sa.String(length=100), nullable=True),
    sa.Column('total_chunks', sa.Integer(), nullable=True),
    sa.Column('processed_chunks', sa.Integer(), nullable=True),
    sa.Column('chunk_results', sa.JSON(), nullable=True),
    sa.Column('failed_chunks', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('is_cancelled', sa.Boolean(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('cancelled_by', sa.Integer(), nullable=True),
    sa.Column('processing_time_seconds', sa.Integer(), nullable=True),
    sa.Column('gemini_api_calls', sa.Integer(), nullable=True),
    sa.Column('gemini_tokens_used', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cancelled_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['history_id'], ['history.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_jobs_celery_task_id'), ['celery_task_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_jobs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_jobs_history_id'), ['history_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_jobs_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_jobs_user_id'), ['user_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('picture', sa.String(length=512), nullable=True),
    sa.Column('google_id', sa.String(length=255), nullable=True),
    sa.Column('google_access_token', sa.Text(), nullable=True),
    sa.Column('google_refresh_token', sa.Text(), nullable=True),
    sa.Column('google_token_expiry', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_google_id'), ['google_id'], unique=True)

    op.create_table('credit_ledger',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('month', sa.String(length=7), nullable=False),
    sa.Column('delta_credits', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=50), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('pricing_version', sa.String(length=20), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('credit_ledger', schema=None) as batch_op:
        batch_op.create_index('idx_user_month', ['user_id', 'month'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_job_id'), ['job_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_month'), ['month'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_reason'), ['reason'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_ledger_user_id'), ['user_id'], unique=False)

    op.create_table('job_chunks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('start_page', sa.Integer(), nullable=False),
    sa.Column('end_page', sa.Integer(), nullable=False),
    sa.Column('page_count', sa.Integer(), nullable=False),
    sa.Column('has_overlap', sa.Boolean(), nullable=True),
    sa.Column('file_b64', sa.Text(), nullable=True),
    sa.Column('storage_url', sa.String(length=512), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('celery_task_id', sa.String(length=155), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('last_error_code', sa.String(length=50), nullable=True),
    sa.Column('result_json', sa.JSON(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_id', 'chunk_id', name='unique_job_chunk')
    )
    with op.batch_alter_table('job_chunks', schema=None) as batch_op:
        batch_op.create_index('idx_job_chunks_job_status', ['job_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_chunks_job_id'), ['job_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_chunks_status'), ['status'], unique=False)

    op.create_table('word_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('source_ref', sa.String(length=512), nullable=True),
    sa.Column('normalized_count', sa.Integer(), nullable=False),
    sa.Column('canonical_samples', sa.JSON(), nullable=True),
    sa.Column('words_json', sa.JSON(), nullable=True),
    sa.Column('is_global_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('word_lists', schema=None) as batch_op:
        batch_op.create_index('idx_wordlist_owner_name', ['owner_user_id', 'name'], unique=False)
        batch_op.create_index(batch_op.f('ix_word_lists_is_global_default'), ['is_global_default'], unique=False)
        batch_op.create_index(batch_op.f('ix_word_lists_owner_user_id'), ['owner_user_id'], unique=False)

    op.create_table('coverage_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mode', sa.String(length=20), nullable=False),
    sa.Column('source_type', sa.String(length=20), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('wordlist_id', sa.Integer(), nullable=True),
    sa.Column('config_json', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('progress_percent', sa.Integer(), nullable=True),
    sa.Column('stats_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.String(length=512), nullable=True),
    sa.Column('celery_task_id', sa.String(length=155), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['wordlist_id'], ['word_lists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('coverage_runs', schema=None) as batch_op:
        batch_op.create_index('idx_coverage_run_source', ['source_type', 'source_id'], unique=False)
        batch_op.create_index('idx_coverage_run_user_status', ['user_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_coverage_runs_celery_task_id'), ['celery_task_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_coverage_runs_mode'), ['mode'], unique=False)
        batch_op.create_index(batch_op.f('ix_coverage_runs_source_id'), ['source_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_coverage_runs_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_coverage_runs_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_coverage_runs_wordlist_id'), ['wordlist_id'], unique=False)

    op.create_table('user_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sentence_length_limit', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('gemini_model', sa.String(length=50), nullable=True),
    sa.Column('ignore_dialogue', sa.Boolean(), nullable=True),
    sa.Column('preserve_formatting', sa.Boolean(), nullable=True),
    sa.Column('fix_hyphenation', sa.Boolean(), nullable=True),
    sa.Column('min_sentence_length', sa.Integer(), nullable=True),
    sa.Column('default_wordlist_id', sa.Integer(), nullable=True),
    sa.Column('coverage_defaults_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['default_wordlist_id'], ['word_lists.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_settings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_settings_user_id'), ['user_id'], unique=True)

    op.create_table('coverage_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coverage_run_id', sa.Integer(), nullable=False),
    sa.Column('word_original', sa.String(length=255), nullable=True),
    sa.Column('word_key', sa.String(length=255), nullable=False),
    sa.Column('lemma', sa.String(length=255), nullable=True),
    sa.Column('matched_surface', sa.String(length=255), nullable=True),
    sa.Column('sentence_index', sa.Integer(), nullable=False),
    sa.Column('sentence_text', sa.Text(), nullable=False),
    sa.Column('sentence_score', sa.Float(), nullable=True),
    sa.Column('conflicts', sa.JSON(), nullable=True),
    sa.Column('manual_edit', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['coverage_run_id'], ['coverage_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('coverage_assignments', schema=None) as batch_op:
        batch_op.create_index('idx_coverage_assignment_run_word', ['coverage_run_id', 'word_key'], unique=False)
        batch_op.create_index(batch_op.f('ix_coverage_assignments_coverage_run_id'), ['coverage_run_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_coverage_assignments_word_key'), ['word_key'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('coverage_assignments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_coverage_assignments_word_key'))
        batch_op.drop_index(batch_op.f('ix_coverage_assignments_coverage_run_id'))
        batch_op.drop_index('idx_coverage_assignment_run_word')

    op.drop_table('coverage_assignments')
    with op.batch_alter_table('user_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_settings_user_id'))

    op.drop_table('user_settings')
    with op.batch_alter_table('coverage_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_coverage_runs_wordlist_id'))
        batch_op.drop_index(batch_op.f('ix_coverage_runs_user_id'))
        batch_op.drop_index(batch_op.f('ix_coverage_runs_status'))
        batch_op.drop_index(batch_op.f('ix_coverage_runs_source_id'))
        batch_op.drop_index(batch_op.f('ix_coverage_runs_mode'))
        batch_op.drop_index(batch_op.f('ix_coverage_runs_celery_task_id'))
        batch_op.drop_index('idx_coverage_run_user_status')
        batch_op.drop_index('idx_coverage_run_source')

    op.drop_table('coverage_runs')
    with op.batch_alter_table('word_lists', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_word_lists_owner_user_id'))
        batch_op.drop_index(batch_op.f('ix_word_lists_is_global_default'))
        batch_op.drop_index('idx_wordlist_owner_name')

    op.drop_table('word_lists')
    with op.batch_alter_table('job_chunks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_chunks_status'))
        batch_op.drop_index(batch_op.f('ix_job_chunks_job_id'))
        batch_op.drop_index('idx_job_chunks_job_status')

    op.drop_table('job_chunks')
    with op.batch_alter_table('credit_ledger', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credit_ledger_user_id'))
        batch_op.drop_index(batch_op.f('ix_credit_ledger_timestamp'))
        batch_op.drop_index(batch_op.f('ix_credit_ledger_reason'))
        batch_op.drop_index(batch_op.f('ix_credit_ledger_month'))
        batch_op.drop_index(batch_op.f('ix_credit_ledger_job_id'))
        batch_op.drop_index('idx_user_month')

    op.drop_table('credit_ledger')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_google_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_jobs_user_id'))
        batch_op.drop_index(batch_op.f('ix_jobs_status'))
        batch_op.drop_index(batch_op.f('ix_jobs_history_id'))
        batch_op.drop_index(batch_op.f('ix_jobs_created_at'))
        batch_op.drop_index(batch_op.f('ix_jobs_celery_task_id'))

    op.drop_table('jobs')
    with op.batch_alter_table('history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_history_user_id'))
        batch_op.drop_index(batch_op.f('ix_history_timestamp'))
        batch_op.drop_index(batch_op.f('ix_history_original_filename'))
        batch_op.drop_index(batch_op.f('ix_history_job_id'))

    op.drop_table('history')
    # ### end Alembic commands ###
